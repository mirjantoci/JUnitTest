<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>BasicJUnitTests</groupId>
	<artifactId>BasicJUnitTests</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- if you want to use the Java 8 language features (-source 1.8) and also want the compiled classes to be compatible with JVM 1.8 (-target 1.8), 
	     	 you can either add the two following properties, which are the default property names for the plugin parameters: -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

		<junit.jupiter.version>5.3.2</junit.jupiter.version>
	</properties>
	<dependencies>
		<!-- JUnit5 dependencies: * junit-jupiter-api: for writing JUnit5 tests 
			* junit-jupiter-engine: for running JUnit5 tests * junit-platform-xxx: the 
			foundation for JUnit5 * (Optionally) you might want to include junit-vintage-engine 
			for running JUnit4 tests -->
			
		<!-- The junit-jupiter-api dependency allows us to write tests and extensions which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<!--<scope>test</scope> -->
		</dependency>
		
		<!-- The junit-jupiter-params dependency allows us to write parameterized tests which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<!--<scope>test</scope> -->
		</dependency>
		
		<!-- The junit-jupiter-engine dependency allows us to run tests which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<!--<scope>test</scope> -->
		</dependency>
		
		<!-- The junit-vintage-engine dependency allows us to run tests which use JUnit 3 or 4. -->
		<!--<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.jupiter.version}</version>-->
			<!--<scope>test</scope> -->
		<!--</dependency> -->
		
		<!-- Public API for configuring and launching test plans — typically used by IDEs and build tools. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-launcher</artifactId>
		    <version>1.3.2</version>
		    <!--<scope>test</scope> -->
		</dependency>
		
		<!-- Runner for executing tests and test suites on the JUnit Platform in a JUnit 4 environment. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <version>1.3.2</version>
		    <!--<scope>test</scope> -->
		</dependency>
		
		<!--  Annotations for configuring test suites on the JUnit Platform. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-suite-api -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-suite-api</artifactId>
		    <version>1.3.2</version>
		    <!--<scope>test</scope> -->
		</dependency>			
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>

			<!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
                <useSystemClassLoader>false</useSystemClassLoader>
           		</configuration>
			</plugin>
		</plugins>
	</build>
</project>
